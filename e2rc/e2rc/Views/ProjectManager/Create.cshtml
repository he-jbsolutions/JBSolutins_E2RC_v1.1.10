@model e2rc.Models.ProjectManagerModel
@{
    ViewBag.Title = "Create Project Manager";
}
<style type="text/css">
    .select2-container-multi .select2-choices
    {
        margin: -13px;
        padding: 3px 5px 2px 0;
    }
    select.input-validation-error
    {
        border: 1px solid #FF0034;
    }

</style>

<script src="../../Scripts/select2.js" type="text/javascript"></script>
<link href="../../Content/css/select2.css" rel="stylesheet" type="text/css" />
<script type="text/javascript">
    $(function () {    

        $("#PhoneNumber").on("keyup", function (e) {
            if ($(this).val().length == 3) {

                $(this).val($(this).val() + "-");

            } else if ($(this).val().length == 7) {

                $(this).val($(this).val() + "-");

            }
        });

        $("#MobileNumber").on("keyup", function (e) {
            if ($(this).val().length == 3) {

                $(this).val($(this).val() + "-");

            } else if ($(this).val().length == 7) {

                $(this).val($(this).val() + "-");

            }
        });

        $("#location_Location_ID").select2();

//        $("#btnSubmit").click(function () {
//           
//            if ($("#location_Location_ID").val() ==null) {
//                $(".select2-choices").css("border", "1pt solid red");

//                $(document.forms[1]).valid();
//                return false;
//            }
//        });

//        $(document).on("select2-opening", function (arg) {

//            $(".select2-choices").css("border", "");

//        });

    });  
</script>

<script type="text/javascript">

    $(function () {
        $(".date").bind("change", function (e) {
            var date1 = document.getElementById("Date").value.split("/");
            var month = parseInt(date1[0]);
            var day = parseInt(date1[1]);
            var year = parseInt(date1[2]);
            var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
            if (month == 1 || month > 2) {
                if (day > ListofDays[month - 1]) {
                    alert('Invalid date format!');
                    return false;
                }
            }
            if (month == 2) {
                var lyear = false;
                if ((!(year % 4) && year % 100) || !(year % 400)) {
                    lyear = true;
                }
                if ((lyear == false) && (day >= 29)) {
                    alert('Invalid date format!');
                    return false;
                }
                if ((lyear == true) && (day > 29)) {
                    alert('Invalid date format!');
                    return false;
                }
            }
            if (month > 12 && day > 12) {
                alert('Invalid date format!');
                return false;
            }
            if (year < 100) {
                year = "20" + year;
            }
            if (month < 10) {
                month = "0" + month;
            }
            if (day < 10) {
                day = "0" + day;
            }

            if (month > 12) {
                $(this).val(day + "/" + month + "/" + year);
            }
            else {
                $(this).val(month + "/" + day + "/" + year);
            }
        });
        $("#Date").on("change",
              function () {
                  if ($(this).val() == "NaN/NaN/NaN")
                      $(this).val("MM/DD/YYYY");
              });
    });

</script>

<script type="text/javascript">
    var IsFormFilled = false;
    $(function () {
        $(".btnbk").click(function () {
            $("input:text:not(.date)").each(function () {

                if ($(this).val().trim() != "" && $(this).val().trim().length > 0) {
                    IsFormFilled = true;
                }

            });
            if (IsFormFilled) {
                if (confirm("The account information is incomplete or has not been saved.Select 'OK' to proceed or 'Cancel' to complete and save the account information")) {
                    window.history.back();
                }
                else {
                    IsFormFilled = false;
                }
            } else {
                window.history.back()
            }
        });
    });  
</script>
<div class="navbar" style="margin-bottom: 0% !important;">
    <div class="row">
        <div class="col-md-6">
            <div class="col-sm-4">
                <div class="btn btn-black btn-custom btnbk" style="width: 100%;">
                    Back</div>
            </div>
            <div class="col-sm-1">
            </div>
           @* <div class="col-sm-5">
                @Html.ActionLink("View Project Manager", "Index", "ProjectManager", null, new { @class = "btn btn-custom btn-black " })
            </div>*@
        </div>
    </div>
</div>
<div class="panel-head">
    Create Project Manager Account
</div>
@using (Html.BeginForm("create", "ProjectManager", FormMethod.Post, new { enctype = "multipart/form-data" }))
{    
    @Html.AntiForgeryToken()     
    <div id="accordion" class="panel-group">
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="panel-title">
                    <b>Project Manager Details</b>
                </div>
            </div>
            <div id="collapseThree" class="panel-collapse collapse  in">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">
                            <label class="col-sm-4 sp-15bottom">
                                @Html.LabelFor(model => model.FirstName)</label>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control sp-15bottom", placeholder = "Enter First Name" })
                                @Html.ValidationMessageFor(model => model.FirstName)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label class="col-sm-4 sp-15bottom">
                                @Html.LabelFor(model => model.LastName)</label>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control sp-15bottom", placeholder = "Enter Last Name" })
                                @Html.ValidationMessageFor(model => model.LastName)
                            </div>
                        </div>                        
                    </div>
                    <div class="row">
                    <div class="col-md-6">
                            <label class="col-sm-4 sp-15bottom">
                                @Html.LabelFor(model => model.Date)</label>
                            <div class="col-sm-8">
                                @Html.EditorFor(model => model.Date, new { @class = "form-control sp-15bottom" })
                                @Html.ValidationMessageFor(model => model.Date)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label class="col-sm-4 sp-15bottom">
                                @Html.LabelFor(model => model.UserName)</label>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(model => model.UserName, new { @class = "form-control sp-15bottom", placeholder = "Enter Username" })
                                @Html.ValidationMessageFor(model => model.UserName)
                            </div>
                        </div>                        
                    </div>
                    <div class="row">
                    <div class="col-md-6">
                            <label class="col-sm-4 sp-15bottom">
                                Password</label>
                            <div class="col-sm-8">
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control sp-15bottom ", placeholder = "******" })
                                @Html.ValidationMessageFor(model => model.Password)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label class="col-sm-4 sp-15bottom">
                                Confirm Password</label>
                            <div class="col-sm-8">
                                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control sp-15bottom ", placeholder = "******" })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword)
                            </div>
                        </div>                        
                    </div>
                    <div class="row">
                    <div class="col-md-6">
                            <label class="col-sm-4 sp-15bottom">
                                @Html.LabelFor(model => model.Email)</label>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(model => model.Email, new { @type = "email", @class = "form-control sp-15bottom", placeholder = "example@gmail.com" })
                                @Html.ValidationMessageFor(model => model.Email)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label class="col-sm-4 sp-15bottom">
                                Role</label>
                            <div class="col-sm-8">                            
                             @Html.DropDownListFor(model => model.Role.Role_ID, new SelectList(new e2rc.Models.ProjectManagerModel().Roles, "Role_ID", "Description"), new { @class = "form-control sp-15bottom", @readonly = "readonly" })
                               @* @Html.DropDownListFor(model => model.Role.Role_ID, new SelectList(new e2rc.Models.ProjectManagerModel().Roles, "Role_ID", "Description"),new { @class = "form-control sp-15bottom", @disabled = "disabled"})*@
                                @Html.ValidationMessageFor(model => model.Role.Role_ID)
                            </div>
                        </div>                        
                    </div>
                    <div class="row">
                    <div class="col-md-6">
                            <label class="col-sm-4 sp-15bottom">
                                @Html.LabelFor(model => model.Qualification)</label>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(model => model.Qualification, new { @class = "form-control sp-15bottom", placeholder = "Enter Qualification" })
                                @Html.ValidationMessageFor(model => model.Qualification)
                            </div>
                        </div>
                    <div class="col-md-6">
                            <label class="col-sm-4 sp-15bottom">
                                @Html.LabelFor(model => model.PhoneNumber)</label>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control sp-15bottom", placeholder = "999-999-9999" })
                                @Html.ValidationMessageFor(model => model.PhoneNumber)
                            </div>
                        </div>                                            
                    </div>   
                    
                    <div class="row">
                    <div class="col-md-6">
                            <label class="col-sm-4 sp-15bottom">
                                @Html.LabelFor(model => model.MobileNumber)</label>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(model => model.MobileNumber, new { @class = "form-control sp-15bottom", placeholder = "999-999-9999" })
                                @Html.ValidationMessageFor(model => model.MobileNumber)
                            </div>
                        </div>
                        <div class="col-md-6">
                                <div class="col-sm-6 sp-15bottom">
                                    <label class="checkbox-inline" >
                                        @Html.CheckBoxFor(model => model.IsActive, new { @class = "checkbox-inline "})Project Manager Active
                                    </label>
                                </div>
                            </div> 
                    </div>              
                </div>
            </div>
        </div>
        <div class="panel panel-default">
                     <div class="panel-heading">
                   <div class="panel-title">
                  <b> Assign Projects</b>
                   </div>
                   </div>
                   <div class="panel-body">
                    <div class="row">
                        <div class="col-md-2">
                            <label class="col-sm-4 sp-15bottom">
                                </label>
                        </div>
                        <div class="col-md-10" style="padding-left: 31px;"> 
                           @* @Html.DropDownListFor(m => m.location.Location_ID, new SelectList(new List<dynamic> { new { Location_ID = "", Name = "Select Project Name" } }, "Location_ID", "Name"), new { @class = "form-control sp-15bottom ", multiple = "multiple", data_val = true })*@
                                @Html.DropDownListFor(m => m.location.Location_ID, new SelectList(Model.PMLocations((long)User.User_ID), "Location_ID", "Name"),"Select project Name", new { @class = "form-control sp-15bottom", multiple = "multiple", data_val = true })                              
                              @*  @Html.ValidationMessageFor(model => model.location.Location_ID)      *@                    
                        </div>
                    </div>
                    </div>
                    </div>
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="panel-title">
                    <b>Address</b>
                </div>
            </div>
            <div id="collapseAddress">
                <div class="panel-body">
                    <div class="">
                        <div class="row">
                        <div class="col-md-6">
                                <label class="col-sm-4 sp-15bottom">
                                    Mailing Address</label>
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(model => model.Address.MailingAddress, new { @class = "form-control sp-15bottom", placeholder = "Enter Mailing Address" })
                                    @Html.ValidationMessageFor(model => model.Address.MailingAddress)
                                </div>
                            </div>
                            <div class="col-md-6">
                                <label class="col-sm-4 sp-15bottom">
                                    City</label>
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(model => model.Address.City, new { @class = "form-control sp-15bottom", placeholder = "Enter City" })
                                    @Html.ValidationMessageFor(model => model.Address.City)
                                </div>
                            </div> 
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label class="col-sm-4 sp-15bottom">
                                    State</label>
                                <div class="col-sm-8">
                                    @Html.DropDownListFor(model => model.Address.State.State_ID, new SelectList(Model.Address.States, "State_ID", "Name"), "Select State", new { @class = "form-control sp-15bottom" })
                                    @Html.ValidationMessageFor(model => model.Address.State.State_ID)
                                </div>
                            </div>
                            <div class="col-md-6">
                                <label class="col-sm-4 sp-15bottom">
                                    Zip Code</label>
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(model => model.Address.ZipCode, new { @class = "form-control sp-15bottom", placeholder = "Enter Zip Code" })
                                    @Html.ValidationMessageFor(model => model.Address.ZipCode)
                                </div>
                            </div>
                        </div>                      
                        <div class="row">
                            <div class="col-md-12">
                                <button id="btnSubmit" class="btn  btn-primary" value="Submit">
                                    Save</button>
                            </div>
                        </div>
                        <div class="row">
                            @Html.ValidationSummary(true)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
