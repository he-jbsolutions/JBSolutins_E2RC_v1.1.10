@model e2rc.Models.LocationModel
@{
    ViewBag.Title = "Edit Location";
}
<!--Below Script and css are dropdown with multiple selected checkbox -->
<script src="~/Scripts/multiple-select.js"></script>
<link href="~/Content/css/multiple-select.css" rel="stylesheet" />
<script>
    $(function () {
        $("#lstInspector_ID").multipleSelect({
            placeholder: "Select Inspector Name",
            filter: true
        });
        $("#lstInspector_ID").multipleSelect("setSelects", [@Model.lInspector_ID]);
        $("#lstReviewer_ID").multipleSelect({
            placeholder: "Select Reviewer Name",
            filter: true
        });
        $("#lstReviewer_ID").multipleSelect("setSelects", [@Model.lReviewer_ID]);
        $(".ms-parent").css("width", "238.33px");
        /*$("#btnSubmit").click(function () {
            //alert("Selected values: " + $("#lstInspector_ID").multipleSelect("getSelects"));
            //alert("Selected values Type: " + typeof($("#lstInspector_ID").multipleSelect("getSelects")));
            //alert("Selected texts: " + $("#lstLocation_ID").multipleSelect("getSelects", "text"));
            if (($("#lstInspector_ID").multipleSelect("getSelects") != '') && ($("#lstLocation_ID").multipleSelect("getSelects") != '')) {
                $("#RemoveAccess").val(false);
                return true;
            }   
            else {
                alert('Select Atleast one Inspector and Project Name !');
                return false;
            }
        }); */
    });
</script>

<script type="text/javascript">
$(function(){
var IsFormFilled=false;
        $(".btnbk").click(function () {
        var result= '@ViewBag.IsLocationEdited';      
        if(result== false)
        {
            $("input:text").each(function () {
                if ($(this).val().trim() != "" && $(this).val().trim().length > 0) {
                    IsFormFilled = true;
                }

            });
            if (IsFormFilled) {
                if (confirm("The project information is incomplete or has not been saved.Select 'OK' to proceed or 'Cancel' to complete and save the account information")) {
                    window.location = "@Url.Action("Index","Location")";
                }
                else {
                    IsFormFilled = false;
                }
            } else {
                window.location = "@Url.Action("Index","Location")";
            }
            }
            else{
            window.location = "@Url.Action("Index","Location")";
            }
        });
        });
        </script>
<style type="text/css">  
    select.input-validation-error
    {    
    border: 1px solid #FF0034;
    }
</style>

<!--
<script type="text/javascript">
    $(document).ready(function () {
        $('#IsAssignInspector').change(function () {
            if ($(this).prop('checked')) {
                alert("This will assign project to all the Inspectors of the current franchise !"); //checked
            }
            else {
                alert("This will Unassign project to all the Inspectors of the current franchise !"); //checked
            }
        });
        $('#IsAssignReviewer').change(function () {
            if ($(this).prop('checked')) {
                alert("This will assign project to all the Reviewer of the current franchise !"); //checked
            }
            else {
                alert("This will Unassign project to all the Inspectors of the current franchise !"); un //checked
            }
        });
    });
</script>-->

@*<script type="text/javascript">
    $(document).ready(function () {
        if (document.getElementById('F1ID') == null) {  
            document.getElementById('F2').style.display = 'block';
            document.getElementById('F2ID').style.display = 'block';
            document.getElementById('F2').style.display = 'block';
        }
        else {
            document.getElementById("F1ID").style.display = 'block';
            document.getElementById('F2').style.display = 'none';
            document.getElementById('F2ID').style.display = 'none';
            document.getElementById('F2').style.display = 'none';
        }
    });   
</script>*@

<script type="text/javascript">
    $(document).ready(function () {
        if (document.getElementById('F2ID') == null) {
            document.getElementById("F1ID").style.display = 'block';
            document.getElementById('F2').style.display = 'none';
            document.getElementById('F2ID').style.display = 'none';
            document.getElementById('F2').style.display = 'none';

            
        }
        else {
            document.getElementById('F2').style.display = 'block';
            document.getElementById('F2ID').style.display = 'block';
            document.getElementById('F2').style.display = 'block';            
        }
    });   
</script>

<script type="text/javascript">
    $(function () {

        $(".removerow").click(function () {
            if ($("#tblstation tr").length > 1) {
                var tr = $(this).parent().parent();
                $(this).parent().parent().remove();
            }
            else {
                alert("you can not delete this record.");
            }

        });
    });
 </script>
<script type="text/javascript">
    var cnt = 1;
    function AddStationRow() {
        var tr = $('<tr>' +
                  '<td data-title="txtStation"><input type="text" id="txtstation' + cnt + '" class = "text form-control sp-15bottom stationids" name="txt' + cnt + '" data_val ="true" placeholder = "F2(Station Based)" /></td>' +
                  '<td><select  class = "form-control sp-15bottom itemids" id="itemID' + cnt + '"  name="itemID' + cnt + '" data_val="true"></select></td>' +
                   '<td><select  class = "form-control sp-15bottom lmrids" id="LMRID' + cnt + '"  name="LMRID' + cnt + '" data_val="true"></select></td>' +
                   '<td><span id="deletestation" class="glyphicon glyphicon-minus-sign removerow" style="cursor: pointer;"></span></td>' +
                   '</tr>');
        $("#itemID").children().each(function () {
            $(tr).find('#itemID' + cnt).append($("<option></option>").attr("value", $(this).val()).text($(this).text()));
        });
        $("#LMRID").children().each(function () {
            $(tr).find('#LMRID' + cnt).append($("<option></option>").attr("value", $(this).val()).text($(this).text()));
        });

        $("#tblstation").append(tr);
        cnt++;

        $(tr).find(".removerow").bind("click", function () {
            var tr = $(this).parent().parent();
            $(this).parent().parent().remove();
            cnt--;

        });
    }   
</script>
<script type="text/javascript">
    $(function () {
        $("#btnSubmit").click(function () {
            var stationIDs = ''; var itemids = ""; IsAllDataValide = true;
            $("#tblstation tr").each(function () {

                if (($(this).find("input:text").val() == "")) {
                    $(this).find("input:text").css("border", "1px solid red");
                    $(this).find("input:text").focusout(function () {
                        if ($(this).val() != "")
                            $(this).css("border", "1px solid gray");
                    });
                    IsAllDataValide = false;
                }

                if ($(this).find(":selected:eq(0)").text() == "Select Item") {
                    $(this).find("select:eq(0)").css("border", "1px solid red");
                    $(this).find("select:eq(0)").bind("change", function () {
                        if ($(this).val() != "Select Item")
                            $(this).css("border", "1px solid gray");
                    });

                    IsAllDataValide = false;
                }

                if ($(this).find(":selected:eq(1)").text() == "Select") {
                    $(this).find("select:eq(1)").css("border", "1px solid red");
                    $(this).find("select:eq(1)").bind("change", function () {
                        if ($(this).val() != "Select")
                            IsAllDataValide = true;
                        $(this).css("border", "1px solid gray");
                    });

                    IsAllDataValide = false;
                }
                stationIDs += $(this).find("input:text").val() + "," + $(this).find("select:eq(0)").val() + "," + $(this).find("select:eq(1)").val() + " ";               
            });

            if (IsAllDataValide) {
                stationIDs = stationIDs.trim().replace(/ /g, "`");
                $("#F2ID").val('');
                $("#F2ID").val(stationIDs);
                return true;
            } else {
                alert("Please fill all red marked fields.");
                $(document.forms[1]).valid();
                return false;
            }
        });
    });
</script>
<div class="navbar" style="margin-bottom: 0% !important;">
    <div class="row">
        <div class="col-md-6">
            <div class="col-sm-4">
                <div class="btn btn-black btn-custom btnbk" style="width: 100%;">
                    Back</div>
            </div>
            <div class="col-sm-1">
            </div>
           @* <div class="col-sm-4">
                @Html.ActionLink("View Location", "Index", "Location", null, new { @class = "btn btn-black btn-custom" })
            </div>*@
        </div>
        <div class="col-md-6">
            @if (ViewBag.IsLocationEdited ?? false)
            {
                <font style="color: #468847;">Location / project @ViewBag.LocationName  has been updated successfully.</font>
            }
            else if (!(ViewBag.IsLocationEdited ?? true))
            {
                <font style="color: #468847;">Unable to update Location / project.</font>
            }
        </div>
    </div>
</div>
<div class="panel-head">
    Edit project
</div>
@using (Html.BeginForm("Edit", "Location", FormMethod.Post))
{
    @Html.AntiForgeryToken()  
    <div id="accordion" class="panel-group">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title" style="font-weight: bold;">
                    Location / Project
                </h4>
            </div>
            <div id="collapseTwo" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingTwo" style="overflow: inherit;">
                <div class="panel-body">
                    <div class="">
                        <div class="row">
                            <div class="col-md-6">
                                <label class="col-sm-5 sp-15bottom">
                                    @Html.LabelFor(model => model.Name)
                                </label>
                                <div class="col-sm-7">
                                    @Html.EditorFor(model => model.Name, new { @class = "form-control sp-15bottom", placeholder = "Enter Project Name" })
                                    @Html.ValidationMessageFor(model => model.Name)
                                    @Html.HiddenFor(model => model.Location_ID)
                                </div>
                            </div>
                            <div class="col-md-6">
                                <label class="col-sm-5 sp-15bottom">
                                    Address Line 1
                                </label>
                                <div class="col-sm-7">
                                    @Html.EditorFor(model => model.MailingAddress, new { @class = "form-control sp-15bottom", placeholder = "Enter Address Line 1" })
                                    @Html.ValidationMessageFor(model => model.MailingAddress)
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label class="col-sm-5 sp-15bottom">
                                    Address Line 2
                                </label>
                                <div class="col-sm-7">
                                    @Html.TextBoxFor(model => model.MailingAddress2, new { @class = "form-control sp-15bottom", placeholder = "Enter Address Line 2" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <label class="col-sm-5 sp-15bottom">
                                    City
                                </label>
                                <div class="col-sm-7">
                                    @Html.EditorFor(model => model.City, new { @class = "form-control sp-15bottom", placeholder = "City" })
                                    @Html.ValidationMessageFor(model => model.City)
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label class="col-sm-5 sp-15bottom">
                                    State
                                </label>
                                <div class="col-sm-7">
                                    @Html.DropDownListFor(model => model.State.State_ID, new SelectList(Model.States, "State_ID", "Name"))
                                    @Html.ValidationMessageFor(model => model.State.Name)
                                </div>
                            </div>

                            <div class="col-md-6">
                                <label class="col-sm-5 sp-15bottom">
                                    Zip Code
                                </label>
                                <div class="col-sm-7">
                                    @Html.EditorFor(model => model.ZipCode, new { @class = "form-control sp-15bottom", placeholder = "Zip Code" })
                                    @Html.ValidationMessageFor(model => model.ZipCode)
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label class="col-sm-5 sp-15bottom">
                                    Project Type
                                </label>
                                <div class="col-sm-7">
                                    @Html.DropDownListFor(model => model.ProjectType_ID, new SelectList(new e2rc.Models.LocationModel().ProjectTypes, "ProjectType_ID", "ProjectType"), "Select Project Type", new { @class = "form-control sp-15bottom" })
                                    @Html.ValidationMessageFor(model => model.MaintainAction)
                                </div>
                            </div>
                            <div class="col-md-6">
                                <label class="col-sm-5 sp-15bottom">
                                    Inspection Frequency
                                </label>
                                <div class="col-sm-7">
                                    @Html.DropDownListFor(model => model.InspectionFreq, new SelectList(new e2rc.Models.LocationModel().InspectionFrequency, "Value", "Text"), "Select Inspection Frequency", new { @class = "form-control sp-15bottom" })
                                    @Html.ValidationMessageFor(model => model.InspectionFreq)
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <label class="col-sm-5 sp-15bottom">
                                    NPDES Tracking Number
                                </label>
                                <div class="col-sm-7">
                                    @Html.TextBoxFor(model => model.TrackingNumber, new { @class = "form-control sp-15bottom", placeholder = "Enter NPDES Tracking Number" })
                                    @Html.ValidationMessageFor(model => model.TrackingNumber)
                                </div>
                            </div>

                            <div class="col-md-6">
                                <label class="col-sm-5 sp-15bottom">
                                    Maintenance/Corrective Action by
                                </label>
                                <div class="col-sm-7">
                                    @Html.DropDownListFor(model => model.MaintainAction, new SelectList(new e2rc.Models.LocationModel().Maintenance, "Value", "Text"), "Select", new { @class = "form-control sp-15bottom" })
                                    @Html.ValidationMessageFor(model => model.MaintainAction)
                                </div>
                            </div>
                        </div>
                        <div class="row" id="director">
                            <div class="col-md-6">
                                <label class="col-sm-5 sp-15bottom">
                                    Inspection Report Recipient
                                </label>
                                <div class="col-sm-7">
                                    @Html.TextBoxFor(model => model.InspectionReportEmails, new { @class = "form-control sp-15bottom", placeholder = "example@gmail.com" })
                                    @Html.ValidationMessageFor(model => model.InspectionReportEmails)
                                </div>
                            </div>
                            <div class="col-md-6">
                                <label class="col-sm-5 sp-15bottom">
                                    Work Order Recipient
                                </label>
                                <div class="col-sm-7">
                                    @Html.TextBoxFor(model => model.WorkOrdersEmails, new { @class = "form-control sp-15bottom", placeholder = "example@gmail.com" })
                                    @Html.ValidationMessageFor(model => model.WorkOrdersEmails)
                                </div>
                            </div>
                        </div>
                        <div class="row" id="Executor">
                            <div class="col-md-6">
                                <label class="col-sm-5 sp-15bottom">
                                    3-Day Notice Recipient
                                </label>
                                <div class="col-sm-7">
                                    @Html.TextBoxFor(model => model.Threedaynoticeemails, new { @class = "form-control sp-15bottom", placeholder = "example@gmail.com" })
                                    @Html.ValidationMessageFor(model => model.Threedaynoticeemails)
                                </div>
                            </div>
                            <div class="col-md-6">
                                <label class="col-sm-5 sp-15bottom">
                                    5-Day Notice Recipient
                                </label>
                                <div class="col-sm-7">
                                    @Html.TextBoxFor(model => model.Fivedaynoticeemails, new { @class = "form-control sp-15bottom", placeholder = "example@gmail.com" })
                                    @Html.ValidationMessageFor(model => model.Fivedaynoticeemails)
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label class="col-sm-5 sp-15bottom">
                                    7-Day Notice Recipient
                                </label>
                                <div class="col-sm-7">
                                    @Html.TextBoxFor(model => model.Sevendaynoticeemails, new { @class = "form-control sp-15bottom", placeholder = "example@gmail.com" })
                                    @Html.ValidationMessageFor(model => model.Sevendaynoticeemails)
                                </div>
                            </div>
                            <div class="col-md-6">
                                <label class="col-sm-5 sp-15bottom">
                                    Company Name
                                </label>
                                <div class="col-sm-7">
                                    @Html.DropDownListFor(model => model.Client_ID, new SelectList(e2rc.Models.Repository.LocationRepository.GetClientDetails((long)User.User_ID), "Client_ID", "Name"), "Select Company Name", new { @class = "form-control sp-15bottom " })
                                    @*@Html.DropDownListFor(model => model.Client_ID, new SelectList(new e2rc.Models.GeneralInspectionModel().clients, "Client_ID", "Name"), "Select Company Name", new { @class = "form-control sp-15bottom" })*@
                                    @Html.ValidationMessageFor(model => model.Client_ID)
                                    @Html.HiddenFor(mode => Model.CompanyName)
                                    @Html.HiddenFor(mode => Model.CustomerName)
                                </div>
                            </div>
                        </div>
                        <!--Assign Inspector and Reviewer Row-->
                        <div class="row">
                            <div class="col-md-6">
                                <label class="col-sm-5 sp-15bottom">
                                    Assign Inspector
                                </label>
                                <div class="col-sm-7">
                                    @Html.DropDownListFor(m => m.lstInspector_ID, new MultiSelectList(new e2rc.Models.FranchiseAssignLocationToInspectorModel().GetInspectorDetails((long)User.User_ID), "Inspector_ID", "Name"), new { @class = "", multiple = "multiple" })
                                    @*@Html.DropDownListFor(m => m.Inspector_ID, new MultiSelectList(new e2rc.Models.FranchiseAssignLocationToInspectorModel().GetInspectorDetails((long)User.User_ID), "Inspector_ID", "Name"),"Select Inspector Name", new { @class = "form-control sp-15bottom " })*@
                                    @*@Html.DropDownListFor(m => m.inspector.Inspector_ID, new SelectList(new e2rc.Models.LocationAssignModel().inspectors, "Inspector_ID", "Name"), "Select Inspector's Name", new { @class = "form-control sp-15bottom" })*@
                                    @*@Html.ValidationMessageFor(model => model.inspector.Inspector_ID)*@
                                </div>
                            </div>
                            <div class="col-md-6">
                                <label class="col-sm-5 sp-15bottom">
                                    Assign Reviewer
                                </label>
                                <div class="col-sm-7">
                                    @Html.DropDownListFor(m => m.lstReviewer_ID, new MultiSelectList(new e2rc.Models.FranchiseAssignLocationToClientModel().GetReviewerDetails((long)User.User_ID), "Reviewer_ID", "Name"), new { multiple = "multiple" })
                                    @* @Html.DropDownListFor(model => model.Client_ID, new SelectList(new e2rc.Models.GeneralInspectionModel().clients, "Client_ID", "Name"), "Select Company Name", new { @class = "form-control sp-15bottom" })*@
                                    @*   @Html.DropDownListFor(model => model.MaintainAction, new SelectList(new e2rc.Models.LocationModel().Maintenance, "Value", "Text"), "Select", new { @class = "form-control sp-15bottom" })*@
                                    @Html.ValidationMessageFor(model => model.Client_ID)
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="col-sm-6 sp-15bottom">
                                    <label class="checkbox-inline">
                                        @Html.CheckBoxFor(model => model.IsActive, new { @class = "checkbox-inline " })Project Active
                                    </label>
                                </div>
                            </div>
                            <div class="col-md-6" style="display:none">
                                <div class="col-sm-5 sp-15bottom">
                                    <label>
                                        @Html.CheckBoxFor(model => model.IsRequired, new { @class = "col-sm-3 sp-15bottom" })
                                        IsRequired
                                    </label>
                                </div>
                            </div>
                        </div>
                        @if (string.IsNullOrEmpty(Model.F2_ID))
                        {
                            <div class="row">
                                <div class="col-md-6" id="F1">
                                    <div class="col-sm-5 sp-15bottom">
                                        @Html.CheckBox("F1 (Non Station Based)", new { @class = "col-sm-3 sp-15bottom chknonStation", @id = "nonStation", @checked = "checked" })F1
                                        (Non Station Based)
                                    </div>
                                    @*<div class="col-sm-3">
                                    @Html.TextBoxFor(model => model.F1_ID, new { @class = "form-control sp-15bottom", placeholder = "F1(Non Station Based)", @id = "F1ID" })
                                    @* @Html.ValidationMessageFor(model => model.F1_ID)
                                </div>*@
                                </div>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(Model.F2_ID))
                        {
                            <div class="row">
                                <div class="col-md-12" id="F2">
                                    <div class="col-sm-3 sp-15bottom">
                                        @Html.CheckBox("F2 (Station Based)", new { @class = "col-sm-3 sp-15bottom chkStation", @id = "Station", @checked = "checked" })F2
                                        (Station Based)
                                    </div>
                                    <div class="col-md-6 col-sm-5">
                                        @Html.HiddenFor(model => model.F2_ID, new { @class = "form-control sp-15bottom", placeholder = "F2(Station Based)", @id = "F2ID" })
                                        <table id="tblstation" class="table table-bordered table-striped">
                                            @{
                            Int16 count = 0;
                            foreach (var trf2id in Model.F2_ID.Split('`'))
                            {
                                count++;

                                <tr>
                                    @if (!string.IsNullOrEmpty(trf2id) && trf2id.Split(',').Length > 0)
                                    {
                                        <td class=" col-md-4 active center">
                                            @Html.TextBox("txtstation" + count, trf2id.Split(',')[0], new { @class = "form-control sp-15bottom stationids", placeholder = "F2(Station Based)", @id = "F2ID", data_val = false, value = false })
                                            @* @Html.TextBoxFor(model => model.F2_ID, new { @class = "form-control sp-15bottom stationids", placeholder = "F2(Station Based)", @id = "F2ID", @Style = "display:none", data_val = false, value = false })*@
                                        </td>
                                    }
                                    else
                                    {
                                        <td class=" col-md-6 active center">
                                            @Html.TextBox("txtstation" + count, new { @class = "form-control sp-15bottom stationids", placeholder = "F2(Station Based)", @id = "F2ID", data_val = false, value = false })
                                        </td>
                                    }
                                    @if (!string.IsNullOrEmpty(trf2id) && trf2id.Split(',').Length > 1)
                                    {
                                        <td class=" col-md-3 active center">
                                            @Html.DropDownList("ddlItemID" + count, new SelectList(new e2rc.Models.UploadDataModel().C1items, "Item_ID", "Name", trf2id.Split(',')[1]), "Select Item", new { @class = "form-control itemids", @id = "itemID", data_val = false })
                                            @*  @Html.DropDownListFor(model => model.Item_ID, new SelectList(new e2rc.Models.UploadDataModel().C1items, "Item_ID", "Name"), "Select Item", new { @class = "form-control itemids", data_val = true, @Style = "display:none", @id = "itemID" })*@
                                        </td>
                                    }
                                    else
                                    {
                                        <td class=" col-md-4 active center">
                                            @Html.DropDownList("ddlItemID" + count, new SelectList(new e2rc.Models.UploadDataModel().C1items, "Item_ID", "Name"), "Select Item", new { @class = "form-control itemids", data_val = false, value = false, @id = "itemID" })
                                        </td>
                                    }
                                    @if (!string.IsNullOrEmpty(trf2id) && trf2id.Split(',').Length > 2)
                                    {
                                        <td class=" col-md-4 active center">
                                            @Html.DropDownList("ddllmrID" + count, new SelectList(new e2rc.Models.LocationModel().LMRs, "Value", "Text", trf2id.Split(',')[2]), "Select Item", new { @class = "form-control lmrids", @id = "LMRID", data_val = false, })
                                            @*  @Html.DropDownListFor(model => model.Item_ID, new SelectList(new e2rc.Models.UploadDataModel().C1items, "Item_ID", "Name"), "Select Item", new { @class = "form-control itemids", data_val = true, @Style = "display:none", @id = "itemID" })*@
                                        </td>
                                    }
                                    else
                                    {
                                        <td class=" col-md-4 active center">
                                            @Html.DropDownList("ddllmrID" + count, new SelectList(new e2rc.Models.LocationModel().LMRs, "Value", "Text"), "Select", new { @class = "form-control lmrids", data_val = false, value = false, @id = "LMRID" })
                                            @*  @Html.DropDownListFor(model => model.Item_ID, new SelectList(new e2rc.Models.UploadDataModel().C1items, "Item_ID", "Name"), "Select Item", new { @class = "form-control itemids", data_val = true, @Style = "display:none", @id = "itemID" })*@
                                        </td>
                                    }
                                    <td>
                                        <span id="deletestation" class="col-md-1 glyphicon glyphicon-minus-sign removerow"
                                              style="cursor: pointer;"></span>
                                    </td>
                                </tr>

                            }
                                            }
                                        </table>
                                    </div>
                                    <div class="col-sm-2 sp-15bottom">
                                        <input type="button" id="btnAdd" class="btn  btn-primary" value="Add Station ID"
                                               onclick="javascript:AddStationRow()" />
                                    </div>
                                    <div class="col-lg-12 sp-15bottom " id="holder" style="max-height: 140px; overflow-y: auto">
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="row">
                            <div class="col-md-12 ">
                                <button id="btnSubmit" class="btn  btn-primary" value="Submit">
                                    Save
                                </button>
                            </div>
                        </div>
                        <div class="row">
                            @Html.ValidationSummary(true)
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>   
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
