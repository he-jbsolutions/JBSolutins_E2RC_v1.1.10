@using PagedList.Mvc
@using PagedList

@model IPagedList<e2rc.Models.LocationModel>
@{
    ViewBag.Title = "DisplayClientWiseProject";
}
<style type="text/css">

.panel-title 
{
    font-size:14px !important;
}
</style>
<div class="navbar" style="margin-bottom: 0% !important;">
    <div class="row">
        <div class="col-md-6">
            <div class="col-sm-4">
                @Html.ActionLink("Dashboard", "Index", "Dashboard", null, new { @class = "btn btn-custom btn-black margin-0" })
            </div>
            <div class="col-sm-1">
            </div>
            @if (User.Role == "Super Admin")
            {            
            <div class="col-sm-4">
                @Html.ActionLink("Back", "Index", "Client", new { user_id = Request.QueryString["user_id"] }, new { @class = "btn btn-black btn-custom margin-0" })
            </div>
            }
            else if (User.Role != "Franchise Admin")
            {                 
             <div class="col-sm-4">
                @Html.ActionLink("Back", "DisplayActiveClient", "Client", new { user_id = Request.QueryString["user_id"] }, new { @class = "btn btn-black btn-custom margin-0" })
            </div>
            } 
        </div>     
    </div>
</div>
<div class="panel-head"> 
   Client Projects 
</div>
<div id="dialog-confirm">
</div>
<div class="panel panel-default" style="margin-bottom: 0% !important;">
    <div class="panel-body padding-0">
        <div class="table-responsive">
            <table class="table table-bordered table-striped table-hover margin-0 ">
                <tr class="panel-title">
                    <th class="header-color col-md-2">
                        @Html.DisplayNameFor(model => model.First().Name)
                    </th>
                    <th class="header-color col-md-4">
                       Address
                    </th>                                    
                    <th class="header-color col-md-2">
                        @Html.DisplayNameFor(model => model.First().CompanyName)
                    </th>                   
                     <th class="header-color col-md-1">
                      Modified Date
                    </th>
                     <th class="header-color col-md-2">
                       Days Past Due
                    </th>    
                    <th class="header-color col-md-2">
                        Inspection
                    </th>   
                                 
                </tr>
                @if (Model != null)
                {
                    foreach (var item in Model)
                    {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                          @Html.HiddenFor(modelItem => item.Location_ID)
                        </td> 
                        <td>
                            @Html.DisplayFor(modelItem => item.MailingAddress), @Html.DisplayFor(modelItem => item.City), @Html.DisplayFor(model => item.State.Name) ,@Html.DisplayFor(modelItem => item.ZipCode)
                        </td>
                                          
                        <td>
                            @Html.DisplayFor(modelItem => item.CompanyName)
                        </td>                       
                        <td>
                            @Html.DisplayFor(modelItem => item.ModifiedDate)
                        </td> 
                        <td>
                            @Html.DisplayFor(modelItem => item.days)
                        </td>                    
                        <td>
                            @Html.ActionLink("View", "ProjectWiseInpectionSubmission", "Submission", new { Location_ID = item.Location_ID, Client_ID = Request.QueryString["Client_ID"], user_id = Request.QueryString["user_id"] }, null) 
                           @* |<a href="#" onclick="ConfirmDeletion('Are you sure want to delete this Location?',
                                                                 'Delete Location ?','/Location/Delete',
                                                                  'Location_ID',@item.Location_ID,'unable to delete the Location.'
                                                                  ,'Location has been deleted successfully.',
                                                                  '../Location/index');" >Delete</a>*@
                        </td>
                        
                        
                    </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6">
                            No Location found to display.
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>
</div>
@if (Model != null)
{
    <div class="panel-head padding-0" style="font-size: 13px !important;")>   
     @Html.PagedListPager(Model, Page => Url.Action("DisplayClientwiseProject", new
{
    Page,
    search = Request.QueryString["search"],
    Client_ID = Request.QueryString["Client_ID"]
}), new PagedListRenderOptions()
{
    Display = PagedListDisplayMode.IfNeeded,
    DisplayPageCountAndCurrentLocation = true,
    MaximumPageNumbersToDisplay = 10
})
    </div>
}
